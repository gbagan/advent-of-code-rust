// look-and-say  (Conway)
// http://njohnston.ca/2010/10/a-derivation-of-conways-degree-71-look-and-say-polynomial/

use anyhow::*;
use crate::util::times;

const CONWAY_INDEXES: [usize; 144] = [
    62, 63, 61, 64, 65, 67, 68, 83, 54, 69, 70, 75, 76, 81, 77, 78, 79, 80, 28, 90, 80, 28, 89, 80, 29,
    74, 28, 91, 74, 31, 71, 72, 73, 82, 85, 86, 87, 88, 91, 0, 2, 3, 1, 60, 28, 84, 4, 27, 23, 32, 60, 28, 90,
    23, 32, 60, 28, 89, 6, 7, 8, 9, 20, 21, 22, 10, 18, 11, 12, 13, 14, 17, 15, 16, 19, 5, 60, 28, 91, 25, 26,
    24, 28, 91, 24, 28, 66, 24, 28, 84, 24, 28, 67, 60, 28, 88, 60, 32, 39, 40, 41, 42, 37, 38, 43, 47, 53, 48,
    49, 50, 51, 46, 37, 46, 54, 46, 55, 46, 56, 46, 57, 46, 58, 46, 59, 46, 32, 60, 28, 91, 44, 45, 52,
    37, 28, 88, 37, 29, 37, 30, 33, 35, 34, 36
];

const CONWAY_STRINGS: [&str; 92] = [
    "1112",
    "1112133",
    "111213322112",
    "111213322113",
    "1113",
    "11131",
    "111311222112",
    "111312",
    "11131221",
    "1113122112",
    "1113122113",
    "11131221131112",
    "111312211312",
    "11131221131211",
    "111312211312113211",
    "111312211312113221133211322112211213322112",
    "111312211312113221133211322112211213322113",
    "11131221131211322113322112",
    "11131221133112",
    "1113122113322113111221131221",
    "11131221222112",
    "111312212221121123222112",
    "111312212221121123222113",
    "11132",
    "1113222",
    "1113222112",
    "1113222113",
    "11133112",
    "12",
    "123222112",
    "123222113",
    "12322211331222113112211",
    "13",
    "131112",
    "13112221133211322112211213322112",
    "13112221133211322112211213322113",
    "13122112",
    "132",
    "13211",
    "132112",
    "1321122112",
    "132112211213322112",
    "132112211213322113",
    "132113",
    "1321131112",
    "13211312",
    "1321132",
    "13211321",
    "132113212221",
    "13211321222113222112",
    "1321132122211322212221121123222112",
    "1321132122211322212221121123222113",
    "13211322211312113211",
    "1321133112",
    "1322112",
    "1322113",
    "13221133112",
    "1322113312211",
    "132211331222113112211",
    "13221133122211332",
    "22",
    "3",
    "3112",
    "3112112",
    "31121123222112",
    "31121123222113",
    "3112221",
    "3113",
    "311311",
    "31131112",
    "3113112211",
    "3113112211322112",
    "3113112211322112211213322112",
    "3113112211322112211213322113",
    "311311222",
    "311311222112",
    "311311222113",
    "3113112221131112",
    "311311222113111221",
    "311311222113111221131221",
    "31131122211311122113222",
    "3113112221133112",
    "311312",
    "31132",
    "311322113212221",
    "311332",
    "3113322112",
    "3113322113",
    "312",
    "312211322212221121123222113",
    "312211322212221121123222112",
    "32112"
];

const CONWAY_START: [usize; 93] = [
    0, // 62
    1, // 63
    3, // vec!(64)),
    4, // vec!(65)),
    5, // vec!(67)),
    6, // vec!(68)),
    7, // vec!(83, 54)),
    9, // vec!(69)),
    10, // vec!(70)),
    11, // vec!(75)),
    12, // vec!(76)),
    13, //vec!(81)),
    14, // vec!(77)),
    15, // vec!(78)),
    16, // vec!(79)),
    17, // vec!(80, 28, 90)),
    20, // vec!(80, 28, 89)),
    23, // vec!(80, 29)),
    25, //vec!(74, 28, 91)),
    28, // vec!(74, 31)),
    30, // vec!(71)),
    31, // vec!(72)),
    32, // vec!(73)),
    33, // vec!(82)),
    34, // vec!(85)),
    35, // vec!(86)),
    36, //vec!(87)),
    37, // vec!(88, 91)),
    39, // vec!(0)),
    40, // vec!(2)),
    41, // vec!(3)),
    42, //vec!(1, 60, 28, 84)),
    46, // vec!(4)),
    47, // vec!(27)),
    48, // vec!(23, 32, 60, 28, 90)),
    53, // vec!(23, 32, 60, 28, 89)),
    58, //vec!(6)),
    59, // vec!(7)),
    60, // vec!(8)),
    61, // vec!(9)),
    62, // vec!(20)),
    63, // vec!(21)),
    64, // vec!(22)),
    65, // vec!(10)),
    66, // vec!(18)),
    67, // vec!(11)),
    68, // vec!(12)),
    69, // vec!(13)),
    70, // vec!(14)),
    71, // vec!(17)),
    72, // vec!(15)),
    73, // vec!(16)),
    74, // vec!(19)),
    75, // vec!(5, 60, 28, 91)),
    79, // vec!(25)),
    80, // vec!(26)),
    81, // vec!(24, 28, 91)),
    84, // vec!(24, 28, 66)),
    87, // vec!(24, 28, 84)),
    90, // vec!(24, 28, 67, 60, 28, 88)),
    96, // vec!(60)),
    97, // vec!(32)),
    98, // vec!(39)),
    99, // vec!(40)),
    100, // vec!(41)),
    101, // vec!(42)),
    102, // vec!(37, 38)),
    104, // vec!(43)),
    105, // vec!(47)),
    106, // vec!(53)),
    107, // vec!(48)),
    108, // vec!(49)),
    109, // vec!(50)),
    110, // vec!(51)),
    111, // vec!(46, 37)),
    113, // vec!(46, 54)),
    115, // vec!(46, 55)),
    117, // vec!(46, 56)),
    119, // vec!(46, 57)),
    121, // vec!(46, 58)),
    123, // vec!(46, 59)),
    125, // vec!(46, 32, 60, 28, 91)),
    130, // vec!(44)),
    131, // vec!(45)),
    132, // vec!(52)),
    133, // vec!(37, 28, 88)),
    136, // vec!(37, 29)),
    138, // vec!(37, 30)),
    140, // vec!(33)),
    141, // vec!(35)),
    142, // vec!(34)),
    143, // vec!(36))
    144
];


fn freqs_size(freqs: &[u32]) -> u32 {
    freqs
    .iter()
    .zip(CONWAY_STRINGS.iter())
    .map(|(f, seq)| f * seq.len() as u32)
    .sum()
}

pub fn solve(input: &str) -> Result<(u32, u32)> {
    let sequence = input.trim();
    let init = CONWAY_STRINGS
        .iter()
        .position(|seq| *seq == sequence)
        .with_context(|| format!("Pattern {sequence} is not found in Conway table"))?;

    let mut freqs = [0; 92];
    freqs[init] = 1;

    let freqs = times(40, freqs, |x| next(x));
    let p1 = freqs_size(&freqs);
    let freqs = times(10, freqs, |x| next(x));
    let p2 = freqs_size(&freqs);
    Ok((p1, p2))
}

fn next(freqs: &[u32]) -> [u32; 92] {
    let mut output = [0; 92];
    for (f, &[start, end]) in freqs.iter().zip(CONWAY_START.array_windows()) {
        for &idx in &CONWAY_INDEXES[start..end] {
            output[idx] += f;
        }
    }
    output
}